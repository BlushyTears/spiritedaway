[gd_scene load_steps=17 format=3 uid="uid://bqh1n6tnggwyk"]

[ext_resource type="Script" path="res://CharacterBody3d.cs" id="1_n3v01"]

[sub_resource type="CSharpScript" id="CSharpScript_fqhi8"]
script/source = "using Godot;

public class FogControl : Node
{
    public override void _Ready()
    {
        // Access the WorldEnvironment node
        WorldEnvironment worldEnvironment = GetNode<WorldEnvironment>(\"WorldEnvironment\");

        // Access the Environment resource
        Environment environment = worldEnvironment.Environment;

        // Enable fog
        environment.FogEnabled = true;

        // Set fog color
        environment.FogColor = new Color(0.5f, 0.6f, 0.7f); // Light bluish-gray fog

        // Set fog distance parameters
        environment.FogDepthBegin = 10.0f;  // Distance where fog starts
        environment.FogDepthEnd = 100.0f;   // Distance where fog is fully opaque

        // Optionally set height fog
        environment.FogHeightEnabled = true;
        environment.FogHeightMin = 5.0f;    // Fog starts at this height
        environment.FogHeightMax = 20.0f;   // Fog fades out at this height
        environment.FogHeightCurve = 1.0f;  // Exponential curve for fog density
    }
}
"

[sub_resource type="SphereShape3D" id="SphereShape3D_pijyl"]
radius = 0.8

[sub_resource type="SphereMesh" id="SphereMesh_n3ymn"]

[sub_resource type="ImageTexture" id="ImageTexture_0t65x"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_k31bh"]
vertex_color_is_srgb = true
albedo_color = Color(0.936859, 0.862582, 0.859191, 1)
albedo_texture = SubResource("ImageTexture_0t65x")
metallic_specular = 1.0
emission_enabled = true
emission = Color(0.998817, 0.966502, 0.95207, 1)
emission_energy_multiplier = 0.5

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_ymmih"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_yuitf"]
transparency = 1
albedo_color = Color(0.851952, 0.769286, 0.239991, 0.827451)
albedo_texture = SubResource("NoiseTexture2D_ymmih")
emission_enabled = true
emission = Color(0.938886, 0.836857, 0.930786, 1)
emission_energy_multiplier = 1.6
grow_amount = 0.2
point_size = 52.2

[sub_resource type="SphereMesh" id="SphereMesh_x5xoj"]

[sub_resource type="Curve" id="Curve_6suu8"]
_data = [Vector2(0, 1), 0.0, 0.0, 0, 0, Vector2(0.183453, 0.188), -0.126027, -0.126027, 0, 0, Vector2(1, 1), 0.0, 0.0, 0, 0]
point_count = 3

[sub_resource type="Gradient" id="Gradient_gyryx"]
offsets = PackedFloat32Array(0, 0.504545, 1)
colors = PackedColorArray(0, 0, 0, 1, 0.509091, 0.509091, 0.509091, 1, 1, 1, 1, 1)

[sub_resource type="CSharpScript" id="CSharpScript_6ppym"]
script/source = "using Godot;
using System;

public partial class GpuParticles3d : GpuParticles3D
{
	private CharacterBody3D player;
	private Vector3 previousPlayerPosition;
	private ParticlesMaterial particlesMaterial;

	public override void _Ready()
	{
		// Find the player node
		player = GetNode<CharacterBody3D>(\"/root/Main/Player\");

		if (player == null)
		{
			GD.PrintErr(\"Player node not found.\");
			return;
		}

		previousPlayerPosition = player.GlobalTransform.Origin;

		// Check if the ProcessMaterial is a ParticlesMaterial
		if (ProcessMaterial is ParticlesMaterial material)
		{
			particlesMaterial = material;
		}
		else
		{
			// If no material is assigned, create one and assign it
			GD.Print(\"Creating a new ParticlesMaterial.\");
			particlesMaterial = new ParticlesMaterial();
			ProcessMaterial = particlesMaterial;
		}
	}

	public override void _Process(double delta)
	{
		if (player == null || particlesMaterial == null)
		{
			GD.PrintErr(\"Player or ParticlesMaterial is null.\");
			return;
		}

		// Calculate movement
		Vector3 currentPlayerPosition = player.GlobalTransform.Origin;
		Vector3 movementDelta = currentPlayerPosition - previousPlayerPosition;

		// Calculate speed and adjust emission rate
		float speed = movementDelta.Length();
		particlesMaterial.EmissionRate = Mathf.Lerp(0, 1000, speed);

		// Update velocity based on movement
		Vector3 movementDirection = movementDelta.Normalized();
		particlesMaterial.Velocity = movementDirection * speed * 5f;

		// Update the previous position
		previousPlayerPosition = currentPlayerPosition;
	}
}
"

[sub_resource type="SphereMesh" id="SphereMesh_vhoc2"]

[sub_resource type="BoxMesh" id="BoxMesh_34hwk"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_sjs46"]
albedo_color = Color(0.313726, 0.313726, 0.313726, 1)

[sub_resource type="BoxShape3D" id="BoxShape3D_aepwc"]

[node name="Node3D" type="Node3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.81425, 0)
script = SubResource("CSharpScript_fqhi8")

[node name="CharacterBody3D" type="CharacterBody3D" parent="."]
transform = Transform3D(3, 0, 0, 0, 3, 0, 0, 0, 3, -0.28, 1.808, 0)
script = ExtResource("1_n3v01")

[node name="CollisionShape3D" type="CollisionShape3D" parent="CharacterBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.0707917, -0.222509)
shape = SubResource("SphereShape3D_pijyl")

[node name="MeshInstance3D" type="MeshInstance3D" parent="CharacterBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.158343)
mesh = SubResource("SphereMesh_n3ymn")
surface_material_override/0 = SubResource("StandardMaterial3D_k31bh")

[node name="GPUParticles3D" type="CPUParticles3D" parent="CharacterBody3D/MeshInstance3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0443945, 0.0462799, -0.0295031)
material_override = SubResource("StandardMaterial3D_yuitf")
amount = 600
lifetime = 2.0
preprocess = 0.5
speed_scale = 0.2
explosiveness = 0.1
randomness = 0.5
lifetime_randomness = 0.15
fixed_fps = 30
visibility_aabb = AABB(-4, -4, -4, 8, 8, 8)
mesh = SubResource("SphereMesh_x5xoj")
emission_shape = 1
emission_sphere_radius = 0.5
spread = 180.0
gravity = Vector3(0, 1, 0)
angular_velocity_min = -1.60933e-05
angular_velocity_max = 50.0
angle_min = 1.07288e-05
angle_max = 1.07288e-05
scale_amount_min = 0.1
scale_amount_max = 0.1
scale_amount_curve = SubResource("Curve_6suu8")
color = Color(1, 0.929412, 0.45098, 1)
color_initial_ramp = SubResource("Gradient_gyryx")
anim_speed_min = 0.05
anim_speed_max = 1.5
script = SubResource("CSharpScript_6ppym")

[node name="GPUParticles3D2" type="CPUParticles3D" parent="CharacterBody3D/MeshInstance3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0443945, 0.0462799, -0.0295031)
material_override = SubResource("StandardMaterial3D_yuitf")
amount = 50
lifetime = 2.5
preprocess = 0.5
speed_scale = 0.7
explosiveness = 0.1
randomness = 0.5
lifetime_randomness = 0.15
fixed_fps = 30
visibility_aabb = AABB(-4, -4, -4, 8, 8, 8)
mesh = SubResource("SphereMesh_vhoc2")
emission_shape = 1
emission_sphere_radius = 25.0
spread = 180.0
gravity = Vector3(0, 1, 0)
angular_velocity_min = -1.60933e-05
angular_velocity_max = 50.0
angle_min = 1.07288e-05
angle_max = 1.07288e-05
scale_amount_min = 0.25
scale_amount_max = 0.25
scale_amount_curve = SubResource("Curve_6suu8")
color = Color(1, 0.929412, 0.45098, 1)
color_initial_ramp = SubResource("Gradient_gyryx")
anim_speed_min = 0.05
anim_speed_max = 1.5
script = SubResource("CSharpScript_6ppym")

[node name="Camera3D" type="Camera3D" parent="CharacterBody3D"]
transform = Transform3D(0.333333, 0, 0, 0, 0.328269, 0.0578825, 0, -0.0578825, 0.328269, 0, 1.55211, 3.39891)

[node name="Node3D" type="Node3D" parent="."]
transform = Transform3D(25, 0, 0, 0, 1, 0, 0, 0, 25, 0, -1.63282, 0)

[node name="StaticBody3D" type="StaticBody3D" parent="Node3D"]

[node name="MeshInstance3D" type="MeshInstance3D" parent="Node3D/StaticBody3D"]
transform = Transform3D(5, 0, 0, 0, 0.2, 0, 0, 0, 5, 0, 0, 0)
mesh = SubResource("BoxMesh_34hwk")
skeleton = NodePath("../..")
surface_material_override/0 = SubResource("StandardMaterial3D_sjs46")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Node3D/StaticBody3D"]
transform = Transform3D(5, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0)
shape = SubResource("BoxShape3D_aepwc")
